"use client";
import React, { useState } from "react";
import { CircleHelp, Settings } from "lucide-react";
import {
   DropdownMenu,
   DropdownMenuContent,
   DropdownMenuItem,
   DropdownMenuTrigger,
} from "@/components/ui/dropdown-menu";
import { Tooltip, TooltipContent, TooltipProvider, TooltipTrigger } from "@/components/ui/tooltip";
import { Button } from "@/components/ui/button";
import { cn } from "@/lib/utils";
import { Switch } from "@/components/ui/switch";
import { useRouter } from "next/navigation";

export interface SearchSettingsProps {
}

const SearchSettings = ({}: SearchSettingsProps) => {
   const [open, setOpen] = useState(false);
   const [hideAiChecked, setHideAiChecked] = useState(false);

   const router = useRouter()

   return (
      <DropdownMenu onOpenChange={setOpen} open={open}>
         <DropdownMenuTrigger>
            <TooltipProvider>
               <Tooltip>
                  <TooltipTrigger asChild>
                     <Button className={cn(`rounded-full border-none`)} variant="outline" size="icon">
                        <Settings size={20} className={`text-neutral-700 dark:text-neutral-200`} />
                     </Button>
                  </TooltipTrigger>
                  <TooltipContent side={`bottom`}
                                  className={`!px-3 py-[1px] !text-[.7rem] rounded-xl bg-black text-white`}>
                     Search settings
                  </TooltipContent>
               </Tooltip>
            </TooltipProvider>
         </DropdownMenuTrigger>
         <DropdownMenuContent className={`gap-2 flex flex-col p-2`} align="end">
            <DropdownMenuItem className={`flex items-center gap-2`} onClick={null!}>
               <Switch />
               <span>SafeSearch</span>
               <TooltipProvider>
                  <Tooltip>
                     <TooltipTrigger className={`cursor-pointer ml-auto`}>
                        <CircleHelp className={`text-neutral-500`} size={16} />
                     </TooltipTrigger>
                     <TooltipContent className={`!text-xs rounded-lg bg-black text-white`}>
                        ...
                     </TooltipContent>
                  </Tooltip>
               </TooltipProvider>
            </DropdownMenuItem>
            <DropdownMenuItem className={`flex items-center gap-2`} onClick={null!}>
               <Switch
                  checked={hideAiChecked}
                  onClick={e => {
                     e.preventDefault();
                     setHideAiChecked(!hideAiChecked);

                     router.push(`/?hideAi=true`)
                     window.location.reload()
                     setOpen(true);
                  }}
                  onCheckedChange={value => {
                     console.log({ value });
                     setOpen(true)
                  }} />
               <span>Hide AI generated</span>
               <TooltipProvider>
                  <Tooltip>
                     <TooltipTrigger className={`cursor-pointer ml-2`}>
                        <CircleHelp className={`text-neutral-500`} size={16} />
                     </TooltipTrigger>
                     <TooltipContent className={`!text-xs rounded-lg bg-black text-white`}>
                        Turn on the Hide AI generated setting to exclude media generated by Artificial Intelligence.
                     </TooltipContent>
                  </Tooltip>
               </TooltipProvider>
            </DropdownMenuItem>
         </DropdownMenuContent>
      </DropdownMenu>
   );
};

export default SearchSettings;